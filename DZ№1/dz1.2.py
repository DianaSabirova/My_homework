#2. Создать список, состоящий из кубов нечётных чисел от 1 до 1000 (куб X - третья степень числа X):
#Вычислить сумму тех чисел из этого списка, сумма цифр которых делится нацело на 7.
# Например, число «19 ^ 3 = 6859» будем включать в сумму, так как 6 + 8 + 5 + 9 = 28 – делится нацело на 7.
# Внимание: использовать только арифметические операции!
#К каждому элементу списка добавить 17 и заново вычислить сумму тех чисел из этого списка, сумма цифр которых делится нацело на 7.
#* Решить задачу под пунктом b, не создавая новый список.

kub_list = []
kub_list_two = [] # в этот список попадут значения к которым добавим 17
all_sum = 0 # числа которые подойдут

# собираем список

for i in range(1, 1001, 2): # создаем список из нечетных чисел от 1 до 1000
    kub_list.append(i ** 3) # добавляем в список возведенные в куб значения

# перебираем элементы списка

for ind, val in enumerate(kub_list): # при использовании enumerate работа идёт с индексом и значением
    sum_digits = 0
    # мы прогоняем цикл. Value будет обнулено, но индексация останется.
    while val > 0:
        sum_digits += val % 10 # в sum_dig попадает значение из списка. С помощью x % 10 можно получить только последнюю цифру
        val //=10  # а с помощью целочисленного деления мы удаляем последнюю цифру. Тем самым value равляется 0.
        if sum_digits % 7 == 0: # фильтр на кратность к 7
            all_sum += kub_list[ind]
    print(all_sum)

    for k in kub_list: # перебираем базовый список
        kub_list_two.append(k + 17)

all_sum = 0 # обнуляем all_sum для повторного использования

for ind, val in enumerate(kub_list_two):
    sum_digits = 0
    while val > 0:
        sum_digits += val % 10
        val //= 10
    if sum_digits % 7 == 0:
        all_sum += kub_list_two[ind]

print(all_sum)














