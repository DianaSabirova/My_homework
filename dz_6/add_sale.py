

#6. Реализовать простую систему хранения данных о суммах продаж булочной. Должно быть два скрипта с интерфейсом командной строки:
# для записи данных и для вывода на экран записанных данных. При записи передавать из командной строки значение суммы продаж.
# Для чтения данных реализовать в командной строке следующую логику:
##просто запуск скрипта — выводить все записи;
#запуск скрипта с одним параметром-числом — выводить все записи с номера, равного этому числу, до конца;
#запуск скрипта с двумя числами — выводить записи, начиная с номера, равного первому числу, по номер, равный второму числу, включительно.
#Подумать, как избежать чтения всего файла при реализации второго и третьего случаев.
#Данные хранить в файле bakery.csv в кодировке utf-8. Нумерация записей начинается с 1. Примеры запуска скриптов:

#python add_sale.py 5978,5
#python add_sale.py 8914,3
#python add_sale.py 7879,1
#python add_sale.py 1573,7
#python show_sales.py
#5978,5
#3914,3
#7879,1
#1573,7

# в файле add_sale.py должна происходить работа где добавляются цены в файл bakery.cvs - то есть, будет только 3 параметра
# python add_sale.py 5978,5

#python add_sale.py(первое значение)[0] 99999.999[1](второе значение, которое должно быть не больше чем 99999.999 рублей)[1]
from sys import argv
with open("bakery.csv", "a", encoding="utf-8") as donut_a: #режим дозаписи
    with open("bakery.csv", "r", encoding="utf-8") as donut_r: #режим чтения
        if len(argv) > 1 and [i for i in argv[1:] if "." in i and i.replace(".", "").isdigit()]:# длина аргумента должна быть не менее 1(без учета файла )
            # проверяем, что аргумент - это число, нужно преобразовать к float(), так как может быть записано любое значение.
            if round(float(argv[1]), 3) <= 99999.999: # У аргумента с суммой не должно быть более 3 чисел после запятой
                print(f'{round(float(argv[1]), 3):>010}', file=donut_a) #Округление после последней цифры. не больше 3х.
            else:
                print("Число должно быть меньшее чем 99 999,999")
        else: # здесь читается вся таблица. Аргументов нет.
            print(donut_r.read())




